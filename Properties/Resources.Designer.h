#pragma once

#include <vector>
#include <memory>

//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeltaShadow
{
	namespace Properties
	{


		/// <summary>
		///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
		/// </summary>
		// Этот класс создан автоматически классом StronglyTypedResourceBuilder
		// с помощью такого средства, как ResGen или Visual Studio.
		// Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
		// с параметром /str или перестройте свой проект VS.
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")][System.Diagnostics.DebuggerNonUserCodeAttribute()][System.Runtime.CompilerServices.CompilerGeneratedAttribute()] internal class Resources
		class Resources : public std::enable_shared_from_this<Resources>
		{

		private:
			static std::shared_ptr<System::Resources::ResourceManager> resourceMan;

			static std::shared_ptr<System::Globalization::CultureInfo> resourceCulture;

		public:
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")] internal Resources()
			Resources();

			/// <summary>
			///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
			/// </summary>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)] internal static System.Resources.ResourceManager ResourceManager
			static std::shared_ptr<System::Resources::ResourceManager> getResourceManager();

			/// <summary>
			///   Перезаписывает свойство CurrentUICulture текущего потока для всех
			///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
			/// </summary>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)] internal static System.Globalization.CultureInfo Culture
			static std::shared_ptr<System::Globalization::CultureInfo> getCulture();
			static void setCulture(const std::shared_ptr<System::Globalization::CultureInfo> &value);

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get1_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get1_1Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get1_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get1_2Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get1_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get1_3Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get2_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get2_1Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get2_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get2_2Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get2_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get2_3Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get3_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get3_1Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get3_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get3_2Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get3_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get3_3Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get4_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> get4_1Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getAlienClawClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getAlienClawNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getAlienPetClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getAlienPetNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getAlienSlidermanClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getAlienSlidermanNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getAlienWormClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getAlienWormNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getBigSpiderClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getBigSpiderNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getBoss();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getBoss_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getBoss_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getBoss_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getBossTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getBugClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getBugNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicBar();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicEscape_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicEscape_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicEscape_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicFinalBoss();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicFinalcut();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicIntro();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicJBar();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicJEscape();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicMainMenu();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicRace();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicRaceRoad();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicRaceTop();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicSelectLevel();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClassicSelectSuit();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClip();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getClipTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getCrabBossClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getCrabBossNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getCrakenClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getCrakenNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDLC();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDLCBoss();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDLCBossClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDLCBossNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDLCJacquelineClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDLCJacquelineNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDragon_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDragon_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDragon_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDragonflyClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDragonflyNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDronBomberClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDronBomberNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDronClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getDronNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getEnglish();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFighterBomberClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFighterBomberNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFinalboss();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFinalboss_0();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFinalboss_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFinalboss_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFinalbossTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFinalcut();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFinalcutTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFlyBossClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFlyBossNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFont();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFontEnglish();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFontPolish();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFontRussian();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getFontSpanish();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getGameOver();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getGameOverTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getGunClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getGunNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
			/// </summary>
			static std::shared_ptr<System::Drawing::Icon> getIco32();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
			/// </summary>
			static std::shared_ptr<System::Drawing::Icon> getIco64();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getIntro();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getIntroTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getItemsClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getItemsNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getJacqueline();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getJacquelineClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getJacquelineNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getJellyClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getJellyNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_1_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_1_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_1_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_1_4();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_2_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_2_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_2_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_2_4();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_3_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_3_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_3_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_3_4();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_4_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_4_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_4_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_4_4();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_4_5();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_4_6();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_4_7();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getLevel_4_8();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getMegabrainClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getMegabrainNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getMenu();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getMenuTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
			/// </summary>
			static std::shared_ptr<System::Drawing::Bitmap> getMetall();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getMothClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getMothNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getMotorbike();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getMotorbikeTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextBar();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextEscape_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextEscape_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextEscape_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextFinalBoss();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextFinalcut();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextIntro();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextJBar();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextJEscape();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextMainMenu();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextRace();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextRaceRoad();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextRaceTop();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextSelectLevel();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextSelectSuit();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNextPalette();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNovaClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getNovaNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getPiranhaClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getPiranhaNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
			/// </summary>
			static std::shared_ptr<System::Drawing::Bitmap> getPlatformerModeFont();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getPlatformerModeFont1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getPolish();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getRace();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getRaceTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getRaceClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getRaceNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getRocketmanClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getRocketmanNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getRussian();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSecretBoss();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSecretBossTs();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxBeetle();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxBumerang();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxDamage();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxDogscream();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxDooropen();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxDoors();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxDroid();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxElevator();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxExplosion();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxGotonthewall();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxLowpower();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxMissshoot();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxPowerup();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxRaceBlockHit();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxRaceDown();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxRaceJump();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxRaceWallHit();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxRocket();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxShocker();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxSlide();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxSlime();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxStar();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxStart();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxStealth();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxSteam();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxStungun();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxSwitch();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxTanketteborn();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxTanketteshoot();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxTerminal();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxType();

			/// <summary>
			///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
			/// </summary>
			static std::shared_ptr<System::IO::UnmanagedMemoryStream> getSfxWave();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSlimeClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSlimeNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSonusVenatorClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSonusVenatorNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSpanish();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSpiderClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSpiderNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getStealth_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getStealth_1Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getStealth_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getStealth_2Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getStealth_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getStealth_3Ts();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSubboss_1();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSubboss_2();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSubboss_3();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSubboss_4();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSubboss_5();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSubboss_6();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSuitClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSuitNext();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getSystem();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getTanketteClassic();

			/// <summary>
			///   Поиск локализованного ресурса типа System.Byte[].
			/// </summary>
			static std::vector<std::uint8_t> getTanketteNext();
		};
	}
}
